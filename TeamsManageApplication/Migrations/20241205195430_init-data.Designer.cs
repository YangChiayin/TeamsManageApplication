// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamsManageApplication.DataAccess;

#nullable disable

namespace TeamsManageApplication.Migrations
{
    [DbContext(typeof(TeamsDbContext))]
    [Migration("20241205195430_init-data")]
    partial class initdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teams.Entities.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("OpposingTeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("TeamId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Date = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Home",
                            OpposingTeamName = "Edmonton Oilers",
                            TeamId = 1
                        },
                        new
                        {
                            GameId = 2,
                            Date = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Home",
                            OpposingTeamName = "Calgary Flames",
                            TeamId = 1
                        },
                        new
                        {
                            GameId = 3,
                            Date = new DateTime(2023, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Away",
                            OpposingTeamName = "Montreal Canadians",
                            TeamId = 2
                        },
                        new
                        {
                            GameId = 4,
                            Date = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Away",
                            OpposingTeamName = "Ottawa Senators",
                            TeamId = 2
                        },
                        new
                        {
                            GameId = 5,
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Home",
                            OpposingTeamName = "New York Rangers",
                            TeamId = 2
                        },
                        new
                        {
                            GameId = 6,
                            Date = new DateTime(2023, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Home",
                            OpposingTeamName = "Chicago Blackhawks",
                            TeamId = 1
                        },
                        new
                        {
                            GameId = 7,
                            Date = new DateTime(2023, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Away",
                            OpposingTeamName = "Detroit Redwings",
                            TeamId = 1
                        },
                        new
                        {
                            GameId = 8,
                            Date = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Away",
                            OpposingTeamName = "Boston Bruins",
                            TeamId = 2
                        },
                        new
                        {
                            GameId = 9,
                            Date = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameType = "Home",
                            OpposingTeamName = "Philadelphia Flyers",
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("Teams.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            FirstName = "Bart",
                            LastName = "Simpson",
                            LeagueRegistrationNumber = "DF-17345677",
                            Number = 9,
                            TeamId = 1
                        },
                        new
                        {
                            PlayerId = 2,
                            FirstName = "Lisa",
                            LastName = "Simpson",
                            LeagueRegistrationNumber = "AB-99685633",
                            Number = 11,
                            TeamId = 1
                        },
                        new
                        {
                            PlayerId = 3,
                            FirstName = "Maggie",
                            LastName = "Simpson",
                            LeagueRegistrationNumber = "FG-87455945",
                            Number = 18,
                            TeamId = 2
                        },
                        new
                        {
                            PlayerId = 4,
                            FirstName = "Marge",
                            LastName = "Simpson",
                            LeagueRegistrationNumber = "LM-11409213",
                            Number = 27,
                            TeamId = 2
                        },
                        new
                        {
                            PlayerId = 5,
                            FirstName = "Homer",
                            LastName = "Simpson",
                            LeagueRegistrationNumber = "ZC-59308990",
                            Number = 31,
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("Teams.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            DateCreated = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Toronto Maple Leafs"
                        },
                        new
                        {
                            TeamId = 2,
                            DateCreated = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Winnipeg Jets"
                        });
                });

            modelBuilder.Entity("Teams.Entities.Game", b =>
                {
                    b.HasOne("Teams.Entities.Team", "Team")
                        .WithMany("Games")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Teams.Entities.Player", b =>
                {
                    b.HasOne("Teams.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Teams.Entities.Team", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
